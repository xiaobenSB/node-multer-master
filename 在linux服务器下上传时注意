
这是在我使用的linux服务器才会发生，不知其他liunx会不会这样


在使用数据库时

fs.writeFile('./public/Angular-NG-ZORRO/upload/'+imgName,dataarr[1],{encoding:'latin1'},function(){});  

//数据库前面不得使用fs方法的文件（包括文件流写入）写入,因为会导致下面数据库语句不成功，不知是什么原因。

mysql('INSERT INTO think_xiaoben(username,passworld,imgUrl) VALUES(?,?,?)',[username,passworld,imgName],function(err,result,field){
							   if(err) {   res.setHeader('Content-Type', 'text/plain;charset=utf8'); res.writeHead(404);  res.end("注册失败！账号已存在");  return;}
							fs.writeFile('./public/Angular-NG-ZORRO/upload/'+imgName,dataarr[1],{encoding:'latin1'},function(){});
							
              //得写在数据库执行完成后
              
							res.setHeader('Content-Type', 'text/plain;charset=utf8');
							res.writeHead(200);

							res.end("注册成功!可以点击登陆进行登陆啦");
						   // console.log(222);
					  });
            
           
           
在使用 var ws = fs.createwritestream('xx') 创建写入流方法时，大多node上传框架都是以数据流方式写入的，所以我用框架不行

req.on('data',function(chunk){

     ws.write(chunk.slice(start,end)) ;   //这样在liunx下会导致下面得req.on(end,function(){})里的方法不执行,数据也获取不完整，也不知是什么原因，可能数据过大还是什么

    得使用： data += chunk.toString('latin1');   //这样就会触发end并获取完整数据

})

req.on('end',function(){   });



解决方法如下：


var imgName = null;
			var username = '';
			var passworld = '';
			
			var data = '';
			var file = '';
			var fileFlag = false;
			
			req.on('data' , function(chunk){
			   data += chunk.toString('latin1');
			});    

			req.on("end",function(){
						
						var dataarr = data.split(/\r\n\r\n/);

						for(var i = 0;i<dataarr.length;i++){
						    if(dataarr[i].match(/name=".*"/)){
							//dataarr[i].match(/name=".*"/)[0].split('"')[1] == 'fname' ? username = console.log(dataarr[i+1].split('\r\n')[0],'latin1') : passworld = Buffer.from(dataarr[i+1].split('\r\n')[0],'latin1').toString('utf8');
								switch(dataarr[i].match(/name=".*"/)[0].split('"')[1])
									{
									case 'fname':
										  username = Buffer.from(dataarr[i+1].split('\r\n')[0],'latin1').toString('utf8');
										  if(fileFlag) fileFlag = false;
									  break;
									case 'lname':
										  passworld = Buffer.from(dataarr[i+1].split('\r\n')[0],'latin1').toString('utf8');
										  if(fileFlag) fileFlag = false;
									  break;
									default:
									  if(dataarr[i].match(/filename=".*"/)){
											imgName = new Date().getTime() + '.' + dataarr[i].match(/filename=".*"/)[0].split('"')[1].split('.')[1];	
                                            fileFlag = true;											
											};	
									}
							}
							
							if(fileFlag){
								file += dataarr[i+1];
							}
			 
						}
						fs.writeFile('./public/'+imgName,file,{encoding:'latin1'},function(){});
						console.log(username,passworld,imgName)

				 /*    mysql('INSERT INTO think_xiaoben(username,passworld,imgUrl) VALUES(?,?,?)',[username,passworld,imgName],function(err,result,field){
							   if(err) {   res.setHeader('Content-Type', 'text/plain;charset=utf8'); res.writeHead(404);  res.end("注册失败！账号已存在");  return;}
							if(imgName)fs.writeFile('./public/Angular-NG-ZORRO/upload/'+imgName,file,{encoding:'latin1'},function(){});
							
							res.setHeader('Content-Type', 'text/plain;charset=utf8');
							res.writeHead(200);

							res.end("注册成功!可以点击登陆进行登陆啦");
						   // console.log(222);
					  });*/
					  res.end('ok');
					
			});






